{"version":3,"file":"components/list/list.min.css","mappings":"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","sources":["webpack://core/./src/components/list/_mixins.scss","webpack://core/./src/components/list/_list.scss","webpack://core/./src/components/checkbox/_mixins.scss","webpack://core/./src/partial/scss/mixins/_focus.scss","webpack://core/./src/partial/scss/mixins/_icons.scss","webpack://core/./src/partial/scss/mixins/_hover.scss","webpack://core/./src/components/item/_mixins.scss"],"sourcesContent":["@mixin list-configs {\n  // @include list-tokens;\n  @include list-default;\n  @include list-item;\n  // Lista dentro de lista\n  @include list-in-list;\n  @include list-header;\n  @include list-data-lines;\n}\n\n// @mixin list-tokens {\n// }\n\n// Item da lista complexa\n// É formado por: [support] content [support]\n@mixin list-item {\n  .#{$prefix}item {\n    @include list-item-config;\n  }\n  .#{$prefix}checkbox,\n  .#{$prefix}radio {\n    @include list-checkbox-radio-config;\n  }\n}\n\n@mixin list-item-config {\n  text-align: left;\n  width: 100%;\n  @include icon {\n    text-align: center;\n  }\n\n  > .content {\n    align-items: var(--spacing-vertical-top);\n    display: flex;\n\n    > .content {\n      flex: 1;\n    }\n  }\n  .content:hover button.#{$prefix}button {\n    background-image: linear-gradient(\n      rgba(var(--interactive-rgb), var(--hover)),\n      rgba(var(--interactive-rgb), var(--hover))\n    );\n  }\n\n  &[data-toggle] {\n    cursor: pointer;\n\n    ~ .br-list {\n      .br-item {\n        padding: var(--spacing-scale-base) var(--spacing-scale-3x);\n      }\n    }\n  }\n}\n\n@mixin list-checkbox-radio-config {\n  --interactive-rgb: var(--rgb-primary-default);\n\n  input {\n    &:hover:not(:disabled) {\n      + label::before {\n        background-image: linear-gradient(\n          rgba(var(--interactive-rgb), var(--hover)),\n          rgba(var(--interactive-rgb), var(--hover))\n        );\n      }\n    }\n  }\n}\n// Lista dentro de outra lista\n@mixin list-in-list {\n  & & {\n    overflow: hidden;\n    transition: all 400ms ease-in-out;\n  }\n}\n\n@mixin list-header {\n  .header {\n    align-items: v(spacing-vertical-center);\n    display: flex;\n    font-size: v(font-size-scale-base);\n    font-weight: v(font-weight-bold);\n    justify-content: space-between;\n    padding: v(spacing-scale-base) v(spacing-scale-2x);\n  }\n}\n\n@mixin list-default {\n  // @include list;\n  // Cabeçalho da lista complexa\n\n  &.horizontal {\n    display: flex;\n    flex-wrap: wrap;\n\n    > .header {\n      flex-grow: 1;\n      width: 100%;\n      + .#{$prefix}divider {\n        @include list-header-divider-config;\n      }\n    }\n    > .#{$prefix}item,\n    > .group {\n      + .#{$prefix}divider {\n        @include list-group-divider-config;\n      }\n      @include list-horizontal-group;\n    }\n\n    &[data-toggle] > .#{$prefix}item,\n    &.toggle > .#{$prefix}item {\n      display: block;\n    }\n  }\n}\n\n@mixin list-horizontal-group {\n  flex: 1;\n  height: auto;\n  min-height: 56px;\n  width: auto;\n\n  &.one-line {\n    > .content {\n      height: 56px;\n    }\n  }\n\n  &.two-lines {\n    > .content {\n      height: 72px;\n    }\n  }\n\n  &.three-lines {\n    > .content {\n      height: 6em;\n    }\n  }\n}\n\n@mixin list-group-divider-config {\n  border-width: 0 1px 0 0;\n  width: 1px;\n}\n\n@mixin list-header-divider-config {\n  border-top: 1px solid var(--border-color);\n  width: 100%;\n}\n\n@mixin lista-data-lines-content {\n  height: auto;\n  overflow: hidden;\n  padding: 0 v(spacing-scale-2x);\n  text-overflow: unset;\n  white-space: initial;\n}\n\n@mixin list-data-lines {\n  &[data-one-line] .#{$prefix}item,\n  &[data-one-line] & .#{$prefix}item {\n    height: 2em;\n\n    .content {\n      @include lista-data-lines-content;\n    }\n  }\n\n  &[data-two-lines] .#{$prefix}item,\n  &[data-two-lines] & .#{$prefix}item {\n    height: 4em;\n\n    .content {\n      @include lista-data-lines-content;\n    }\n  }\n\n  &[data-three-lines] .#{$prefix}item,\n  &[data-three-lines] & .#{$prefix}item {\n    height: 6em;\n\n    .content {\n      @include lista-data-lines-content;\n    }\n  }\n}\n","@use \"sass:math\";\n @import \"../../partial/scss/base\";\n \n@import \"mixins\";\n@import \"../item/mixins\";\n@import \"../checkbox/mixins\";\n\n.#{$prefix}list {\n  @include list-configs;\n\n  // Mixins abaixo podem ser usados no shadow dom\n  .#{$prefix}checkbox,\n  .#{$prefix}radio {\n    @include list-checkbox-radio-config;\n  }\n\n  .#{$prefix}checkbox {\n    @include checkbox-configs;\n  }\n  .#{$prefix}item {\n    @include list-item-config;\n    @include item-checkbox;\n  }\n}\n","@mixin checkbox-configs {\n  @include checkbox-tokens;\n  @include checkbox-default;\n  @include checkbox-label;\n  @include checkbox-hidden-label;\n  @include checkbox-checked;\n  @include checkbox-indeterminate;\n  @include checkbox-colors;\n  @include checkbox-sizes;\n  @include checkbox-states;\n  @include checkbox-dark-mode;\n}\n\n@mixin checkbox-tokens {\n  --checkbox-padding: var(--spacing-scale-base);\n  --checkbox-size: 24px;\n}\n\n@mixin checkbox-default {\n  display: block;\n\n  & + & {\n    margin-top: var(--spacing-scale-base);\n  }\n\n  input {\n    opacity: 0;\n    position: absolute;\n\n    + label {\n      cursor: pointer;\n      display: inline-block;\n      margin-bottom: 0; // zerar margem padrão de labels\n      min-height: var(--checkbox-size);\n      min-width: var(--checkbox-size);\n      padding-left: calc(var(--spacing-scale-base) + var(--checkbox-size));\n      position: relative;\n\n      &::before {\n        background: var(--background-light);\n        border: 1px solid var(--border-color);\n        border-radius: 4px;\n        content: \"\";\n        height: var(--checkbox-size);\n        left: 0;\n        position: absolute;\n        width: var(--checkbox-size);\n      }\n\n      &:empty {\n        padding: 0;\n      }\n    }\n  }\n}\n\n@mixin checkbox-label {\n  label {\n    font-weight: var(--font-weight-medium);\n  }\n}\n\n@mixin checkbox-hidden-label {\n  &.hidden-label {\n    label {\n      padding-left: calc(var(--checkbox-size) + var(--surface-width-md) * 2);\n      text-indent: -10000px;\n      white-space: nowrap;\n      width: 0;\n    }\n  }\n}\n\n@mixin checkbox-checked {\n  input {\n    &:checked + label {\n      &::after {\n        border: solid var(--selected);\n        border-width: 0 3px 3px 0;\n        content: \"\";\n        height: var(--icon-size-sm);\n        left: 8px;\n        position: absolute;\n        top: 4px;\n        transform: rotate(45deg);\n        width: 8px;\n      }\n    }\n  }\n}\n\n@mixin checkbox-indeterminate {\n  input[indeterminate] {\n    + label {\n      &::before {\n        --interactive-rgb: var(--color-rgb);\n        background: var(--selected);\n        border-color: var(--selected);\n      }\n    }\n\n    &:hover:not(:disabled) {\n      + label::before {\n        --interactive-rgb: var(--color-dark-rgb);\n      }\n    }\n\n    &:checked {\n      + label {\n        &::after {\n          border-color: var(--background-light);\n          border-width: 0 0 3px;\n          top: 2px;\n          transform: none;\n        }\n      }\n    }\n  }\n}\n\n@mixin checkbox-states {\n  input {\n    // Inválido\n    &:invalid {\n      + label::before {\n        --border-color: var(--danger);\n      }\n    }\n    // Focus\n    &:focus-visible,\n    &.focus-visible {\n      &:checked + label::before,\n      + label::before {\n        @include focus-soft;\n      }\n    }\n    //hover\n    &:hover:not(:disabled) {\n      + label::before {\n        --interactive-rgb: var(--interactive-light-rgb);\n        background-image: linear-gradient(\n          rgba(var(--interactive-rgb), var(--hover)),\n          rgba(var(--interactive-rgb), var(--hover))\n        );\n      }\n    }\n  }\n}\n\n@mixin checkbox-colors {\n  @each $state, $color in (invalid, danger), (valid, success) {\n    &.is-#{$state},\n    &.#{$state},\n    &[#{$state}] {\n      input {\n        + label::before {\n          --border-color: var(--#{$color});\n        }\n\n        &:focus-visible,\n        &.focus-visible {\n          &:checked + label::before,\n          + label::before {\n            --border-color: var(--focus-color);\n          }\n        }\n        // Checado\n        &:checked + label::before {\n          --border-color: var(--#{$color});\n        }\n      }\n    }\n  }\n}\n\n// TODO: Remover na próxima versão\n@mixin checkbox-sizes {\n  // Versão pequena\n  &.is-small,\n  &.small,\n  &[small] {\n    input {\n      // Texto\n      + label {\n        line-height: var(--spacing-scale-2xh);\n        min-height: var(--spacing-scale-2xh);\n      }\n      // Caixa\n      + label::before {\n        height: var(--spacing-scale-2xh);\n        width: var(--spacing-scale-2xh);\n      }\n      // Checado\n      &:checked {\n        + label::after {\n          border-width: 0 2px 2px 0;\n          height: var(--icon-size-sm);\n          left: 7px;\n          top: 6px;\n          width: 6px;\n        }\n\n        &[indeterminate] + label::after {\n          border-color: var(--background-light);\n          border-width: 0 0 3px;\n          top: 2px;\n          transform: none;\n        }\n      }\n    }\n  }\n}\n\n@mixin checkbox-dark-mode {\n  &.inverted,\n  &.dark-mode {\n    &,\n    label {\n      color: var(--color-dark);\n    }\n  }\n}\n","/// Aplica foco: feedback ao navegar por teclado no elemento\n/// @example scss - Uso prático\n///  a {\n///    @include focus;\n///  }\n@mixin focus {\n  &:focus {\n    outline: none;\n  }\n\n  &.focus-visible,\n  &:focus-visible {\n    outline-color: var(--focus);\n    outline-offset: var(--focus-offset);\n    outline-style: var(--focus-style);\n    outline-width: var(--focus-width);\n  }\n}\n\n/// Aplica foco tênue\n/// @example scss - Uso prático\n///  input {\n///    &:focus,\n///    &:focus-visible,\n///    &.focus-visible {\n///      @include focus-soft;\n///    }\n///  }\n@mixin focus-soft {\n  border-color: var(--focus) !important;\n  box-shadow: 0 0 0 var(--surface-width-md) var(--focus);\n  outline: none;\n}\n","@mixin icon-size($value) {\n  @include icon {\n    --icon-size: #{$value};\n  }\n}\n\n@mixin icon {\n  .svg-inline--fa,\n  .fa,\n  .fab,\n  .fad,\n  .fal,\n  .far,\n  .fas {\n    @content;\n  }\n}\n","/// Aplica hover: feedback ao colocar o cursor no elemento\n/// @param {String} $color [\"interactive\"] - Cor do hover **(Opcional)**\n/// @example scss - Uso prático\n///  a {\n///    @include hover;\n///  }\n@mixin hover($color: \"interactive\") {\n  &:not(:disabled) {\n    &:hover {\n      background-image: linear-gradient(\n        rgba(var(--#{$color}-rgb), var(--hover)),\n        rgba(var(--#{$color}-rgb), var(--hover))\n      );\n    }\n  }\n}\n","@mixin item-configs {\n  @include item-tokens;\n  @include item-default;\n  @include item-checkbox;\n  @include item-colors;\n  @include item-states;\n  @include item-toggle;\n  @include item-datatoggle-list;\n}\n\n@mixin item-tokens {\n  --item-padding-x: var(--spacing-scale-2x);\n  --item-padding-y: var(--spacing-scale-base);\n  --item-padding: var(--item-padding-y) var(--item-padding-x);\n}\n\n@mixin item-default {\n  border: 0;\n  color: var(--color);\n  display: block;\n  font-weight: var(--font-weight);\n  padding: var(--item-padding);\n  text-align: left;\n  width: 100%;\n\n  // Regras para Grid interna\n  .row {\n    margin-left: calc(-1 * var(--spacing-scale-base));\n    margin-right: calc(-1 * var(--spacing-scale-base));\n\n    .col,\n    [class*=\"col-\"] {\n      padding-left: var(--spacing-scale-base);\n      padding-right: var(--spacing-scale-base);\n    }\n  }\n\n  // Fix para floats internos\n  &::after {\n    clear: both;\n    content: \"\";\n    display: block;\n  }\n\n  // Transforma curso em cursor pointer quando br-item eh data-toggle\n  &[data-toggle] {\n    cursor: pointer;\n  }\n}\n\n// TODO: migrar customização do Select para o mixin abaixo\n@mixin item-checkbox {\n  &[data-toggle=\"selection\"] {\n    @include hover(\"color\");\n  }\n\n  .#{$prefix}checkbox,\n  .#{$prefix}radio {\n    margin-bottom: calc(var(--item-padding-y) * -1);\n    margin-left: calc(var(--item-padding-x) * -1);\n    margin-right: calc(var(--item-padding-x) * -1);\n    margin-top: calc(var(--item-padding-y) * -1);\n\n    input {\n      +label {\n        padding-bottom: var(--item-padding-y);\n        padding-top: var(--item-padding-y);\n        top: 1px;\n        width: 100%;\n\n        &::before {\n          left: var(--item-padding-x);\n          top: calc(var(--item-padding-y) - 1px);\n        }\n\n        &:empty {\n          left: 0;\n          top: 1px;\n        }\n      }\n\n      &:hover:not(:disabled) {\n        +label::before {\n          background-image: none;\n        }\n      }\n    }\n  }\n\n  .#{$prefix}checkbox {\n    input {\n      +label {\n        min-height: calc(var(--checkbox-size) + var(--item-padding-y) * 2);\n\n        &:not(:empty) {\n          padding-left: calc(var(--checkbox-padding) + var(--checkbox-size) + var(--item-padding-x));\n        }\n\n        &::after {\n          left: calc(var(--item-padding-x) + 8px);\n          top: calc(var(--item-padding-y) + 4px);\n        }\n\n        &:empty {\n          min-height: var(--checkbox-size);\n\n          &::after {\n            left: 8px;\n            top: 4px;\n          }\n        }\n      }\n    }\n  }\n\n  .#{$prefix}radio {\n    input {\n      +label {\n        min-height: calc(var(--radio-size) + var(--item-padding-y) * 2);\n        padding-left: calc(var(--spacing-scale-base) + var(--radio-size) + var(--item-padding-x));\n\n        &::after {\n          left: calc(var(--item-padding-x) + var(--radio-bullet-position));\n          top: calc(var(--item-padding-y) + var(--radio-bullet-position) - 1px);\n        }\n\n        &:empty {\n          min-height: var(--radio-size);\n\n          &::after {\n            left: var(--radio-bullet-position);\n            top: var(--radio-bullet-position);\n          }\n        }\n      }\n    }\n  }\n}\n\n@mixin item-colors {\n  @each $key in map-keys($br-colors) {\n    &.#{$key} {\n      @include colorize($key);\n    }\n  }\n}\n\n@mixin item-states {\n\n  // Selecionado\n  &.selected {\n    @include dark-mode;\n    background-color: var(--selected);\n  }\n\n  // Ativo\n  &.active {\n    @include dark-mode;\n    background-color: var(--active);\n    color: var(--color);\n  }\n\n  // Dark-mode\n  &.inverted,\n  &.dark-mode {\n    @include dark-mode;\n\n    &.active {\n      @include light-mode;\n      --interactive-rgb: var(--active-rgb);\n      background-color: var(--background-light);\n      color: var(--active);\n    }\n  }\n}\n\n// TODO: Este mixin ainda é necessário?\n@mixin item-toggle {\n  &[data-toggle] {\n    @include hover(\"color\");\n\n    .content {\n      i {\n        color: var(--interactive);\n      }\n    }\n  }\n}\n\n@mixin item-center {\n\n  align-items: center;\n  display: flex;\n\n  .content {\n    flex: 1;\n  }\n\n  @include hover;\n}\n\n@mixin item-brackground-transparent {\n  &.active {\n    background: transparent;\n  }\n}\n\n@mixin item-datatoggle-list {\n\n  // Necessario devido a implementacao do fontawasome seguindo os padroes do projeto. Antes usava-se <i></i>\n  // Css ajusta o alinhamento do item  com o icone quando este faz parte de uma lista.\n  .content {\n    align-items: center;\n    display: flex;\n  }\n\n  // Necessario devido a implementacao do fontawasome seguindo os padroes do projeto. Antes usava-se <i></i>\n  // Css ajusta o tamanho do icone de seta quando item faz parte de uma lista.\n  [class*=\"fa-\"] {\n    height: 16px;\n    width: 14px !important;\n  }\n\n  // Necessario devido a implementacao do fontawasome seguindo os padroes do projeto. Antes usava-se <i></i>\n  // Atribuir a cor azul para seta datatoggle\n  .toogle-icon-interactive {\n    color: var(--interactive);\n  }\n}\n\n@mixin item-align-horizontal-list {\n  flex: 1;\n  height: auto;\n  min-height: 56px;\n  width: auto;\n}\n"],"names":[],"sourceRoot":""}