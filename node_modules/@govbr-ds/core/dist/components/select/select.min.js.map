{"version":3,"file":"components/select/select.min.js","mappings":"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","sources":["webpack://core/webpack/universalModuleDefinition","webpack://core/./src/components/select/select.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"core\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory();\n\telse\n\t\troot[\"core\"] = factory();\n})(self, () => {\nreturn ","/**\n * Classe do componente BRSelect\n */\n\nclass BRSelect {\n  /**\n   * Instancia o componente\n   * @property {string} name - Nome do componente em minúsculo\n   * @property {object} component - Objeto referenciando a raiz do componente DOM\n   */\n\n  constructor(name, component) {\n    this.name = name\n    this.component = component\n    this.multiple = component.hasAttribute('multiple')\n    this._setOptionsList()\n    this._setBehavior()\n  }\n  /**\n   * Retorna os valores dos elementos selecionados\n   * @returns {Object[]} elementos selecionados\n   *\n   */\n  get selected() {\n    return this._optionSelected('value')\n  }\n  /**\n   * Retorna os elementos selecionados pelo inputValue\n   * @param {Object[]} elementos selecionados\n   * @returns\n   */\n  get selectedValue() {\n    return this._optionSelected('inputValue')\n  }\n\n  /**\n   * Retorna os elementos options selecionados\n   * @param {Object[]} elementos selecionados\n   * @returns\n   */\n  _optionSelected(strOption) {\n    let selected = []\n    for (const [index, option] of this.optionsList.entries()) {\n      if (!this.multiple) {\n        if (option.selected) {\n          selected = option[strOption]\n          break\n        }\n      } else {\n        if (index > 0 && option.selected) {\n          selected.push(option[strOption])\n        }\n      }\n    }\n    return selected\n  }\n\n  /**\n   * Remove elementos com disbled\n   * @private\n   */\n  _removeNotFoundElement() {\n    const list = this.component.querySelector('.br-list')\n    // debugger\n    if (list.querySelector('.br-item.disabled')) {\n      list.removeChild(list.querySelector('.br-item.disabled'))\n    }\n  }\n\n  /**\n   * Coloca o texto Item não encontrado no select\n   * @private\n   */\n  _addNotFoundElement() {\n    const tag = document.createElement('div')\n    tag.classList.add('br-item')\n    tag.classList.add('disabled')\n    tag.appendChild(document.createTextNode('Item não encontrado'))\n    const list = this.component.querySelector('.br-list')\n    list.appendChild(tag)\n  }\n  /**\n   * Cria listagem de elementos do select\n   * @private\n   */\n  _setOptionsList() {\n    this.optionsList = []\n    for (const item of this.component.querySelectorAll('.br-list .br-item')) {\n      for (const input of item.querySelectorAll(\n        '.br-radio input, .br-checkbox input'\n      )) {\n        const option = {\n          element: item,\n          focus: false,\n          inputValue: input.value,\n          selected: false,\n          value: input.nextElementSibling.innerText,\n          visible: true,\n        }\n        this.optionsList.push(option)\n      }\n    }\n  }\n  /**\n   * Reseta estado da lista\n   * @private\n   */\n  resetOptionsList() {\n    this._unsetSelectionBehavior()\n    this._setOptionsList()\n    this._setSelectionBehavior()\n  }\n  /**\n   * Define o comportamento do componente\n   * @private\n   */\n  _setBehavior() {\n    this._setDropdownBehavior()\n    this._setKeyboardBehavior()\n    this._setSelectionBehavior()\n    this._setFilterBehavior()\n  }\n  /**\n   * Define o comportamento de dropdown\n   * @private\n   */\n\n  _setDropdownBehavior() {\n    for (const input of this.component.querySelectorAll(\n      '.br-input input[type=\"text\"]'\n    )) {\n      input.addEventListener('focus', () => {\n        this._openSelect()\n        this._resetFocus()\n      })\n    }\n    for (const trigger of this.component.querySelectorAll(\n      '.br-input .br-button[data-trigger]'\n    )) {\n      trigger.addEventListener('click', () => {\n        for (const list of this.component.querySelectorAll('.br-list')) {\n          if (list.hasAttribute('expanded')) {\n            this._closeSelect()\n          } else {\n            this._openSelect()\n          }\n        }\n      })\n    }\n    window.document.addEventListener('click', (event) => {\n      if (!this.component.contains(event.target)) {\n        this._closeSelect()\n      }\n    })\n  }\n  /**\n   * Define o comportamento de teclado\n   * @private\n   */\n\n  _setKeyboardBehavior() {\n    for (const input of this.component.querySelectorAll(\n      '.br-input input[type=\"text\"]'\n    )) {\n      input.addEventListener('keydown', this._handleKeydownOnInput.bind(this))\n    }\n    for (const list of this.component.querySelectorAll('.br-list')) {\n      // eslint-disable-next-line complexity\n      list.addEventListener('keydown', this._handleKeydownOnList.bind(this))\n    }\n  }\n  /**\n   * Retira o comportamento de teclado\n   * @private\n   */\n\n  _unsetKeyboardBehavior() {\n    for (const input of this.component.querySelectorAll(\n      '.br-input input[type=\"text\"]'\n    )) {\n      input.removeEventListener('keydown', this._handleKeydownOnInput, false)\n    }\n    for (const list of this.component.querySelectorAll('.br-list')) {\n      // eslint-disable-next-line complexity\n      list.addEventListener('keydown', this._handleKeydownOnList.bind(this))\n    }\n  }\n\n  /**\n   * Verifica a navegação\n   * @param {object} event evento que foi ativado\n   * @private\n   */\n  _handleKeydownOnInput(event) {\n    //Close Select\n    if (event.shiftKey && event.key === 'Tab') {\n      this._closeSelect()\n      this._resetFocus()\n    }\n    if (event.key === 'Tab' && !event.shiftKey) {\n      event.target.parentNode.querySelector('.br-button').focus()\n    }\n    if (event.keyCode === 40) {\n      event.preventDefault()\n      for (const list of this.component.querySelectorAll('.br-list')) {\n        list.focus()\n        if (list === document.activeElement) {\n          this._getNextItem().focus()\n        }\n      }\n    }\n  }\n  /**\n   * Define comportamentos de teclado na lista\n   * @private\n   */\n\n  _handleKeydownOnList(event) {\n    event.preventDefault()\n    switch (event.keyCode) {\n      case 9:\n        this._closeSelect()\n        this._resetFocus()\n        break\n      case 27:\n        this._closeSelect()\n        break\n      case 32:\n        this._setKeyClickOnOption(event.currentTarget)\n        break\n      case 38:\n        this._getPreviousItem().focus()\n        break\n      case 40:\n        this._getNextItem().focus()\n        break\n      default:\n        break\n    }\n  }\n  /**\n   * Define comportamentos de teclado no option\n   * @private\n   */\n  _setKeyClickOnOption(list) {\n    for (const [index, item] of list.querySelectorAll('.br-item').entries()) {\n      if (this.optionsList[index].focus) {\n        for (const check of item.querySelectorAll(\n          '.br-radio input[type=\"radio\"], .br-checkbox input[type=\"checkbox\"]'\n        )) {\n          check.click()\n          this._sendEvent()\n        }\n      }\n    }\n  }\n\n  /**\n   * Envia o evento onchange\n   * @private\n   */\n  _sendEvent() {\n    const clickEvent = new CustomEvent('onChange', {\n      bubbles: true,\n      detail: this.component,\n    })\n    this.component.dispatchEvent(clickEvent)\n  }\n\n  /**\n   * preseleciona o elemento apartir da classe css .selected\n   * @private\n   */\n  _setDefaultSelected() {\n    const selectedItems = this.component.querySelectorAll('.br-list .selected')\n\n    const iterable = typeof selectedItems[Symbol.iterator]\n    if (selectedItems !== null && iterable === 'function') {\n      for (const item of selectedItems) {\n        this._setSelected(this._positionSelected(item), item)\n      }\n    }\n  }\n\n  /**\n   * Retorna posição do elemento no select\n   * @param {element} component elemento que vai ser pesquisado\n   * @returns {integer} valor da posição\n   */\n  _positionSelected(component) {\n    for (const [index, componente] of this.component\n      .querySelectorAll('.br-list .br-item')\n      .entries()) {\n      if (componente === component) {\n        return index\n      }\n    }\n    return 0\n  }\n  /**\n   * Desfine comportamento do clique no checkbox\n   * @param {int} index\n   * @param {object} item -  Objeto do item clicado\n   * @param {object} event  -  Objeto do evento do clique\n   * @private\n   */\n  _handleClickOnCheck(index, item, event) {\n    if (!this.multiple) {\n      for (const [index2, item2] of this.component\n        .querySelectorAll('.br-list .br-item')\n        .entries()) {\n        this._removeSelected(index2, item2)\n      }\n      this._setSelected(index, item)\n      this._closeSelect()\n    } else if (event.currentTarget.hasAttribute('checked')) {\n      this._removeSelected(index, item)\n    } else {\n      this._setSelected(index, item)\n    }\n    if (item.hasAttribute('data-all')) {\n      for (const check of item.querySelectorAll(\n        '.br-checkbox input[type=\"checkbox\"]'\n      )) {\n        if (!check.hasAttribute('checked')) {\n          this._setAttribute()\n          item.querySelectorAll('label')[0].innerText = 'Selecionar Todos'\n        } else {\n          for (const item2 of this.component.querySelectorAll(\n            '.br-list .br-item'\n          )) {\n            for (const check2 of item2.querySelectorAll(\n              '.br-checkbox input[type=\"checkbox\"]'\n            )) {\n              if (!check2.hasAttribute('checked')) {\n                check2.click()\n              }\n            }\n          }\n          item.querySelectorAll('label')[0].innerText = 'Deselecionar Todos'\n        }\n      }\n    }\n    this._sendEvent()\n  }\n  /**\n   * Define comportamentos na seleção\n   * @private\n   */\n  _setSelectionBehavior() {\n    this.selectionHandler = []\n    this._setDefaultSelected()\n    for (const [index, item] of this.component\n      .querySelectorAll('.br-list .br-item')\n      .entries()) {\n      for (const check of item.querySelectorAll(\n        '.br-radio input[type=\"radio\"], .br-checkbox input[type=\"checkbox\"]'\n      )) {\n        this.selectionHandler.push({\n          element: check,\n          handler: this._handleClickOnCheck.bind(this, index, item),\n        })\n        check.addEventListener('click', this.selectionHandler[index].handler)\n      }\n    }\n  }\n  /**\n   * retira comportamento  de clique na seleção\n   * @private\n   */\n  _unsetSelectionBehavior() {\n    this.selectionHandler.forEach((item) => {\n      item.element.removeEventListener('click', item.handler, false)\n    })\n  }\n  /**\n   * Define comportamentos no filtro do input\n   * @private\n   */\n  _setFilterBehavior() {\n    for (const input of this.component.querySelectorAll(\n      '.br-input input[type=\"text\"]'\n    )) {\n      input.addEventListener('input', (event) => {\n        let allHidden = true\n        this._filter(event.currentTarget.value)\n        for (const option of this.optionsList) {\n          if (option.visible) {\n            allHidden = false\n          }\n        }\n\n        if (allHidden) {\n          // event.currentTarget.value = event.currentTarget.value.slice(0, -1)\n          this._filter(event.currentTarget.value)\n        }\n      })\n    }\n  }\n  /**\n   * Define filtro no list\n   * @private\n   */\n  _filter(value) {\n    let hasVisible = false\n    for (const [index, item] of this.component\n      .querySelectorAll('.br-list .br-item')\n      .entries()) {\n      this._removeNotFoundElement()\n      if (!this.optionsList[index]) {\n        continue\n      }\n      if (\n        this.optionsList[index].value\n          .toUpperCase()\n          .indexOf(value.toUpperCase()) === -1\n      ) {\n        item.classList.add('d-none')\n        this.optionsList[index].visible = false\n      } else {\n        item.classList.remove('d-none')\n        this.optionsList[index].visible = true\n        hasVisible = true\n      }\n    }\n    if (hasVisible === false) {\n      this._addNotFoundElement()\n    }\n  }\n  /**\n   * Define atributo checked com click\n   * @private\n   */\n  _setAttribute() {\n    for (const item2 of this.component.querySelectorAll('.br-list .br-item')) {\n      for (const check2 of item2.querySelectorAll(\n        '.br-checkbox input[type=\"checkbox\"]'\n      )) {\n        if (check2.hasAttribute('checked')) {\n          check2.click()\n        }\n      }\n    }\n  }\n\n  /**\n   * Seleciona o elemento e retira checked dos outros elementos\n   * @param {integer} index Posição do elemento na lista\n   * @param {*} item elemento em que vai ser selecionado\n   * @private\n   */\n  _setSelected(index, item) {\n    item.classList.add('selected')\n    for (const check of item.querySelectorAll('.br-radio, .br-checkbox')) {\n      for (const input of check.querySelectorAll(\n        'input[type=\"radio\"], input[type=\"checkbox\"]'\n      )) {\n        input.setAttribute('checked', '')\n      }\n    }\n    this.optionsList[index].selected = true\n    this._setInput()\n  }\n\n  /**\n   * Retira o estado selecionado do elemento\n   * @param {integer} index Posição do elemento na lista\n   * @param {*} item elemento em que vai ser desselecionado\n   * @private\n   */\n  _removeSelected(index, item) {\n    item.classList.remove('selected')\n    for (const check of item.querySelectorAll('.br-radio, .br-checkbox')) {\n      for (const input of check.querySelectorAll(\n        'input[type=\"radio\"], input[type=\"checkbox\"'\n      )) {\n        input.removeAttribute('checked')\n      }\n      this.optionsList[index].selected = false\n      this._setInput()\n    }\n  }\n  /**\n   * Determina o input\n   * @private\n   */\n  _setInput() {\n    for (const input of this.component.querySelectorAll(\n      '.br-input input[type=\"text\"]'\n    )) {\n      if (!this.multiple) {\n        input.value = this.selected\n      } else if (this.selected.length === 0) {\n        input.value = ''\n      } else if (this.selected.length === 1) {\n        input.value = this.selected\n      } else {\n        input.value = `${this.selected[0]} + (${this.selected.length - 1})`\n      }\n    }\n  }\n  /**\n   * Retorna elemento posterior ao focado\n   * @returns {object}\n   * @private\n   */\n  // eslint-disable-next-line complexity\n  _getNextItem() {\n    const list = this.component.querySelectorAll('.br-list .br-item')\n    let iFocused\n    let iVisible\n    for (iFocused = 0; iFocused < this.optionsList.length; iFocused++) {\n      if (this.optionsList[iFocused].focus) {\n        for (\n          iVisible = iFocused + 1;\n          iVisible < this.optionsList.length;\n          iVisible++\n        ) {\n          if (this.optionsList[iVisible].visible) {\n            break\n          }\n        }\n        break\n      }\n    }\n    if (iFocused === this.optionsList.length) {\n      for (const [index, option] of this.optionsList.entries()) {\n        if (option.visible) {\n          option.focus = true\n          return list[index]\n        }\n      }\n    } else if (iVisible < this.optionsList.length) {\n      this.optionsList[iFocused].focus = false\n      this.optionsList[iVisible].focus = true\n      return list[iVisible]\n    } else {\n      return list[iFocused]\n    }\n    return ''\n  }\n  /**\n   * Retorna elemento anterior ao focado\n   * @returns {object}\n   * @private\n   */\n  _getPreviousItem() {\n    const list = this.component.querySelectorAll('.br-list .br-item')\n    let iFocused\n    let iVisible\n    for (iFocused = 0; iFocused < this.optionsList.length; iFocused++) {\n      if (this.optionsList[iFocused].focus) {\n        for (iVisible = iFocused - 1; iVisible > 0; iVisible--) {\n          if (this.optionsList[iVisible].visible) {\n            break\n          }\n        }\n        break\n      }\n    }\n    if (iFocused === 0) {\n      return list[iFocused]\n    } else {\n      this.optionsList[iFocused].focus = false\n      this.optionsList[iVisible].focus = true\n      return list[iVisible]\n    }\n  }\n  /**\n   * Reseta valor do input\n   * @private\n   */\n  _resetInput() {\n    for (const input of this.component.querySelectorAll(\n      '.br-input input[type=\"text\"]'\n    )) {\n      input.value = ''\n    }\n  }\n  /**\n   * Reseta o focus dos elementos\n   * @private\n   */\n  _resetFocus() {\n    for (const option of this.optionsList) {\n      option.focus = false\n    }\n  }\n  /**\n   * Reseta o focus dos elementos visiveis\n   * @private\n   */\n\n  _resetVisible() {\n    const list = this.component.querySelectorAll('.br-list .br-item')\n    for (const [index, option] of this.optionsList.entries()) {\n      option.visible = true\n      list[index].classList.remove('d-none')\n    }\n  }\n  /**\n   * Abre o select aberto\n   * @private\n   */\n  _openSelect() {\n    for (const list of this.component.querySelectorAll('.br-list')) {\n      list.setAttribute('expanded', '')\n    }\n    for (const icon of this.component.querySelectorAll(\n      '.br-input .br-button i'\n    )) {\n      icon.classList.remove('fa-angle-down')\n      icon.classList.add('fa-angle-up')\n    }\n    this._resetInput()\n  }\n  /**\n   * Fecha o select aberto\n   * @private\n   */\n  _closeSelect() {\n    for (const list of this.component.querySelectorAll('.br-list')) {\n      list.removeAttribute('expanded')\n    }\n    for (const icon of this.component.querySelectorAll(\n      '.br-input .br-button i'\n    )) {\n      icon.classList.remove('fa-angle-up')\n      icon.classList.add('fa-angle-down')\n    }\n    this._setInput()\n    this._resetFocus()\n    this._resetVisible()\n  }\n}\n\nexport default BRSelect\n"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","BRSelect","constructor","name","component","this","multiple","hasAttribute","_setOptionsList","_setBehavior","selected","_optionSelected","selectedValue","strOption","index","option","optionsList","entries","push","_removeNotFoundElement","list","querySelector","removeChild","_addNotFoundElement","tag","document","createElement","classList","add","appendChild","createTextNode","item","querySelectorAll","input","element","focus","inputValue","value","nextElementSibling","innerText","visible","resetOptionsList","_unsetSelectionBehavior","_setSelectionBehavior","_setDropdownBehavior","_setKeyboardBehavior","_setFilterBehavior","addEventListener","_openSelect","_resetFocus","trigger","_closeSelect","window","event","contains","target","_handleKeydownOnInput","bind","_handleKeydownOnList","_unsetKeyboardBehavior","removeEventListener","shiftKey","key","parentNode","keyCode","preventDefault","activeElement","_getNextItem","_setKeyClickOnOption","currentTarget","_getPreviousItem","check","click","_sendEvent","clickEvent","CustomEvent","bubbles","detail","dispatchEvent","_setDefaultSelected","selectedItems","iterable","Symbol","iterator","_setSelected","_positionSelected","componente","_handleClickOnCheck","_removeSelected","index2","item2","check2","_setAttribute","selectionHandler","handler","forEach","allHidden","_filter","hasVisible","toUpperCase","indexOf","remove","setAttribute","_setInput","removeAttribute","length","iFocused","iVisible","_resetInput","_resetVisible","icon"],"sourceRoot":""}